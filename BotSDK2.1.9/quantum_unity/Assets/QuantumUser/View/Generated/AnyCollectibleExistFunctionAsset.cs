// <auto-generated>
// This code was auto-generated by a tool, every time
// the tool executes this code will be reset.
//
// If you need to extend the classes generated to add
// fields or methods to them, please create partial  
// declarations in another file.
// </auto-generated>

using Quantum;
using UnityEngine;

[CreateAssetMenu(menuName = "Quantum/AIFunction/AIFunction<T>/AnyCollectibleExistFunction", order = Quantum.EditorDefines.AssetMenuPriorityStart + 0)]
public partial class AnyCollectibleExistFunctionAsset : AIFunctionAsset<System.Boolean> {
  public Quantum.AnyCollectibleExistFunction Settings_AnyCollectibleExistFunction;

  public override string AssetObjectPropertyPath => nameof(Settings_AnyCollectibleExistFunction);
  
  public override Quantum.AssetObject AssetObject => Settings_AnyCollectibleExistFunction;
  public new Quantum.AnyCollectibleExistFunction AssetObjectT => (Quantum.AnyCollectibleExistFunction)AssetObject;
  
  public override void Reset() {
    if (Settings_AnyCollectibleExistFunction == null) {
      Settings_AnyCollectibleExistFunction = new Quantum.AnyCollectibleExistFunction();
    }
    base.Reset();
  }
}

public static partial class AnyCollectibleExistFunctionAssetExts {
  public static AnyCollectibleExistFunctionAsset GetUnityAsset(this AnyCollectibleExistFunction data) {
    return data == null ? null : UnityDB.FindAsset<AnyCollectibleExistFunctionAsset>(data);
  }
}
